<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <bean id="coffeeConstructorBean" class="kuvaldis.play.springframework.CoffeeConstructorBean">
        <constructor-arg index="0" value="I have no idea"/>
        <constructor-arg index="1" value="Oracle"/>
    </bean>
    <bean id="coffeeSetterBean" class="kuvaldis.play.springframework.CoffeeSettersBean">
        <property name="sort" value="Urmm... a good one"/>
        <property name="producedBy" value="Juergen Hoeller"/>
    </bean>

    <bean id="emailsBean" class="kuvaldis.play.springframework.EmailsStorageBean">
        <property name="emails">
            <props>
                <prop key="admin">admin@example.com</prop>
                <prop key="user">user@example.com</prop>
            </props>
        </property>
    </bean>
    <bean id="emailsChildBean" parent="emailsBean">
        <property name="emails">
            <props merge="true">
                <prop key="admin">eve@malefactor.com</prop>
            </props>
        </property>
    </bean>

    <!-- create prototype on call from singleton -->
    <bean id="command" class="kuvaldis.play.springframework.CreatePrototypeFromSingleton.Command" scope="prototype"/>
    <bean id="commandManager" class="kuvaldis.play.springframework.CreatePrototypeFromSingleton.CommandManager">
        <lookup-method name="createCommand" bean="command"/>
    </bean>

    <!-- use thread scoped bean from singleton with scoped proxy -->
    <!-- register thread scope -->
    <bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
        <property name="scopes">
            <map>
                <entry key="thread">
                    <bean class="org.springframework.context.support.SimpleThreadScope"/>
                </entry>
            </map>
        </property>
    </bean>
    <bean id="second" class="kuvaldis.play.springframework.UseScopedProxy.Second" scope="thread">
        <aop:scoped-proxy/>
    </bean>
    <bean id="first" class="kuvaldis.play.springframework.UseScopedProxy.First">
        <property name="second" ref="second"/>
    </bean>

    <!--custom qualifier-->
    <context:annotation-config/>
    <bean class="kuvaldis.play.springframework.qualifier.SimpleMovieCatalog">
        <qualifier type="kuvaldis.play.springframework.qualifier.MovieQualifier">
            <attribute key="format" value="VHS"/>
            <attribute key="genre" value="comedy"/>
        </qualifier>
        <property name="movieName" value="Ace Ventura Pet Detective"/>
    </bean>
    <bean class="kuvaldis.play.springframework.qualifier.SimpleMovieCatalog">
        <qualifier type="kuvaldis.play.springframework.qualifier.MovieQualifier">
            <attribute key="format" value="DVD"/>
            <attribute key="genre" value="action"/>
        </qualifier>
        <property name="movieName" value="Terminator"/>
    </bean>
    <bean class="kuvaldis.play.springframework.qualifier.SimpleMovieCatalog">
        <qualifier type="kuvaldis.play.springframework.qualifier.MovieQualifier">
            <attribute key="format" value="BLUERAY"/>
            <attribute key="genre" value="drama"/>
        </qualifier>
        <property name="movieName" value="The Shawshank Redemption"/>
    </bean>
    <bean id="movieRecommender" class="kuvaldis.play.springframework.qualifier.MovieRecommender"/>

    <context:component-scan base-package="kuvaldis.play.springframework.scoperesolver"
                            scope-resolver="kuvaldis.play.springframework.scoperesolver.MyScopeResolver"/>
</beans>