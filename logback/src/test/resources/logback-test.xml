<!-- debug="true" forces print info about logback configuration on start-->
<!-- scan="true" defines if changes in this config should be tracked and reloaded if necessary. Careful! Affects performance-->
<!-- packagingData="true" enables jar name printing into each line of stack trace -->
<configuration scan="true" scanPeriod="30 seconds" packagingData="true">

    <!-- prints all status messages to console -->
    <!--<statusListener class="ch.qos.logback.core.status.OnConsoleStatusListener"/>-->

    <!-- defines property (variable). system variables (-D) can be referenced anywhere in the config as well-->
    <property name="SOME_PREFIX" value="Hello "/>
    <!-- properties file from classpath -->
    <property resource="log.properties"/>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- PatternLayoutEncoder by default -->
        <encoder>
            <pattern>${SOME_PREFIX} ${ANOTHER_PREFIX} ${NON-EXISTING-PREFIX:-Yeah!} %d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg</pattern>
        </encoder>
    </appender>

    <appender name="RollingFileAppenderExample" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>rollingFile.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rolling happens for each minute, stored in per month folders -->
            <fileNamePattern>rollingFileAppenderExample/%d{yyyy-MM,aux}/rollingFile.%d{yyyy-MM-dd_HH-mm}.log</fileNamePattern>
            <!-- archives will be kept for 10 days -->
            <maxHistory>10</maxHistory>
            <totalSizeCap>10MB</totalSizeCap>
        </rollingPolicy>

        <encoder>
            <pattern>%-4relative [%thread] %-5level %logger{35} - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="SiftingAppenderExample" class="ch.qos.logback.classic.sift.SiftingAppender">
        <discriminator>
            <key>userId</key>
            <defaultValue>unknown</defaultValue>
        </discriminator>
        <sift>
            <appender name="FILE-${userId}" class="ch.qos.logback.core.FileAppender">
                <file>sifting-${userId}.log</file>
                <append>false</append>
                <layout class="ch.qos.logback.classic.PatternLayout">
                    <pattern>%d [%thread] %level %mdc %logger{35} - %msg%n</pattern>
                </layout>
            </appender>
        </sift>
    </appender>

    <logger name="kuvaldis.play.logback.disablelog" level="ERROR" additivity="false">
        <appender-ref ref="STDOUT"/>
    </logger>

    <!-- will have INFO level. No appenders are specified, but STDOUT is inherited from parent. So every message with INFO level (not ERROR) or higher will be print to STDOUT -->
    <logger name="kuvaldis.play.logback.disablelog.Enablelog" level="INFO"/>

    <define name="definerLevel" class="kuvaldis.play.logback.definer.LogLevelDefiner"/>

    <logger name="kuvaldis.play.logback.definer" level="${definerLevel}"/>

    <logger name="RollingFileAppenderExample" level="debug">
        <appender-ref ref="RollingFileAppenderExample"/>
    </logger>

    <logger name="SiftingAppenderExample" level="debug">
        <appender-ref ref="SiftingAppenderExample"/>
    </logger>

    <conversionRule conversionWord="millis"
                    converterClass="kuvaldis.play.logback.converter.SampleConverter"/>
    <appender name="SampleConverterAppender" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%-6millis [%thread] - %msg%n</pattern>
        </encoder>
    </appender>
    <logger name="SampleConverterExample" level="debug" additivity="false">
        <appender-ref ref="SampleConverterAppender"/>
    </logger>

    <appender name="ImportantFilterAppender" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="kuvaldis.play.logback.filter.ImportantFilter"/>
        <encoder>
            <pattern>
                %-4relative [%thread] %-5level %logger - %msg%n
            </pattern>
        </encoder>
    </appender>
    <logger name="ImportantFilterExample" level="debug" additivity="false">
        <appender-ref ref="ImportantFilterAppender"/>
    </logger>

    <root level="debug">
        <appender-ref ref="STDOUT"/>
    </root>
</configuration>